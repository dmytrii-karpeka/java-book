{"version":3,"sources":["LabWork.js","labworks/lw1.js","labworks/lw2.js","App.js","functionality.js","index.js"],"names":["LabWork","this","props","numer","theme","aim","task","imgsrc","src","alt","className","labcode","commentary","conclusions","React","Component","lw1","lw2","App","state","currentPage","nextProps","nextState","event","document","getElementsByClassName","activeButton","slice","length","disactivePreviousButton","classN","target","setState","Array","keys","map","num","onClick","handleClick","id","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8372ff38.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles/style.css';\r\nimport './styles/fonts.css';\r\n\r\nclass LabWork extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Лабораторна робота №{this.props.numer}</h2>\r\n        <h4><b>Тема</b>: {this.props.theme}</h4>\r\n        <h4><b>Мета</b>: {this.props.aim}</h4>\r\n        <h4><b>Завдання</b>: {this.props.task}</h4>\r\n        {this.props.imgsrc ?\r\n          <img src={this.props.imgsrc} alt=\"Function in laboratory\"/>\r\n        : <p>Додаткових зображень у завданні не було</p>}\r\n        <h4>Виконання:</h4>\r\n        <div className={\"code-div\"}>\r\n          <pre className={\"code-block\"}>{this.props.labcode}</pre>\r\n        </div>\r\n        <h4>Пояснення:</h4>\r\n        <p>{this.props.commentary}</p>\r\n        <h4>Висновки:</h4>\r\n        <p>{this.props.conclusions}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LabWork;","export let lw1 = {\r\n  numer: \"1\",\r\n  theme: \"Основні типи та оператори мови програмування Java\",\r\n  aim: \"Ознайомлення з основними типами та операторами в Java. Здобуття навичок у використанні типів та операторів в Java.\",\r\n  task: \"Створити клас, який складається з виконавчого методу, що виконує обчислення значення функції\",\r\n  imgsrc: \"https://asdjonok.github.io/OOP-SITE/pages/1/formula.png\",\r\n  labcode: `\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        int variant = 9212;\r\n\r\n        /**\r\n         * c2 = 0 -- o1 = +\r\n         * c3 = 2 -- c = 2\r\n         * c5 = 2 -- o2 = %\r\n         * c7 = 0 -- type of i and j = byte\r\n         */\r\n        \r\n         // type of data \"byte\" can be number from -128 to 127 (inclusive)\r\n        byte a = 1;\r\n        byte b = 1;\r\n    \r\n        byte n = 1;\r\n        byte m = 2;\r\n\r\n        int c = 2;\r\n\r\n        float result = 0;\r\n\r\n        if (n < a || m < b || (a <= -2 && n >= -2) || (b <= 0 && m >= 0)) {\r\n            System.out.println(\"There is a problem in input data!\");\r\n        } else {\r\n            for (byte i = a; i <= n; i++) {\r\n                for (byte j = b; j <= m; j++) {\r\n                    result += (float)(i % j) / (i + c);\r\n                }\r\n            }\r\n            System.out.println(result);\r\n        }\r\n    }\r\n}`,\r\ncommentary: `\r\nВ лабораторній роботі було використано bytes як основний тип даних. Задати змінну із цим типом можна числом в районі [-128, 127]. \r\nТакий малий діапазон може стати в пригоді при роботі із роботою у великих масивах, де збереження пам'яті дійсно необхідне.\r\nОкрім цього, змінна з цим типом може бути використана замість int у випадках, де обмеження допомагають краще зрозуміти код.\r\nЯкщо ми знаємо про факт обмеженого невеликого діапазону, то використання в коді цього типу може служити певною формою документування\r\nпро змінну.`,\r\nconclusions: `\r\nТаким чином була проведена робота із застосуванням типу byte, досліджене застосування цього типу.\r\nЗгадано синтаксис циклів у мові Java, приведення типів та його роль у правильності виконання задачі.`\r\n}","export let lw2 = {\r\n  numer: \"2\",\r\n  theme: \"Масиви в мові програмування Java.\",\r\n  aim: \"Ознайомлення з масивами та використання основних методів їх обробки в мові програмування Java. Здобуття навичок у використанні масивів в мові програмування Java.\",\r\n  task: \"Створити клас, який складається з виконавчого методу, що виконує дію з матрицею(ями) (п.2) із зазначеним типом елементів (п.3) та дію із результуючою матрицею С (п.4). Вивести на екран результати першої та другої дій.\",\r\n  imgsrc: \"\",\r\n  labcode:\r\n`\r\nimport java.util.Scanner;\r\nimport java.util.Random;\r\n/** Lab2\r\n *  Karpeka Dmytrii\r\n * \r\n *  variant == 9212\r\n *  C5  = 2 -- C = A + B\r\n *  C7  = 0 -- double\r\n *  C11 = 5 -- Обчислити суму найбільших елементів\r\n *             в рядках матриці з непарними номерами\r\n *             та найменших елементів в рядках матриці з парними номерами\r\n */\r\n\r\npublic class App {\r\n    public static void main(String[] args) throws Exception {\r\n        final Scanner sc = new Scanner(System.in);\r\n\r\n        System.out.println(\"Input number of rows in matrixes:\");\r\n        int rows = sc.nextInt();\r\n        System.out.println(\"Input number of columns in matrixes:\");\r\n        int columns = sc.nextInt();\r\n\r\n        double[][] A = new double[rows][columns];\r\n        double[][] B = new double[rows][columns];\r\n        double[][] C = new double[rows][columns];\r\n\r\n        // gap of random generation of doubles\r\n        int min = 0;\r\n        int max = 100;\r\n\r\n        for (int i = 0; i < rows; i++) {\r\n            for (int j = 0; j < columns; j++) {\r\n                // Random generation of matrixes A and B\r\n                Random rand = new Random();\r\n                A[i][j] = min + (max - min) * rand.nextDouble();\r\n                B[i][j] = min + (max - min) * rand.nextDouble();\r\n\r\n                // Sum of matrixes\r\n                C[i][j] = A[i][j] + B[i][j];\r\n            } \r\n        }\r\n\r\n        double sumMaxes = 0;\r\n        double sumMins = 0;\r\n        double element;\r\n\r\n        for (int i = 0; i < rows; i++) {\r\n            // Alternative alorithm\r\n            // element = C[i][0];\r\n            // for (int j = 1; j < columns; j++) {\r\n            //     if (i % 2 == 0) {\r\n            //         if (C[i][j] < element) {\r\n            //             element = C[i][j];\r\n            //         } \r\n            //     } else {\r\n            //         if (C[i][j] > element) {\r\n            //             element = C[i][j];\r\n            //         }\r\n            //     }\r\n            // }\r\n            // if (i % 2 == 0) {\r\n            //     sumMins += element;\r\n            // } else {\r\n            //     sumMaxes += element;\r\n            // }\r\n\r\n            \r\n            element = C[i][0];\r\n            if (i % 2 == 0) {\r\n                for (int j = 1; j < columns; j++) {\r\n                    if (C[i][j] < element) {\r\n                        element = C[i][j];\r\n                    }\r\n                }\r\n                sumMins += element;\r\n            } else {\r\n                for (int j = 1; j < columns; j++) {\r\n                    if (C[i][j] > element) {\r\n                        element = C[i][j];\r\n                    }\r\n                }\r\n                sumMaxes += element;\r\n            }\r\n        }\r\n \r\n        printMatrix(\"C\", C);\r\n        System.out.println(\"Сума найменших в парних: \" + sumMins);\r\n        System.out.println(\"Сума найбільших в непарних: \" + sumMaxes);\r\n    }\r\n\r\n    public static void printMatrix(String matrixName, double[][] matrix) {\r\n        System.out.println(matrixName + \":\");\r\n        for (int i = 0; i < matrix.length; i++) {\r\n            System.out.print(\"[ \");\r\n            for (int j = 0; j < matrix[i].length; j++) {\r\n                System.out.print(matrix[i][j] + \" \");\r\n            }\r\n            System.out.print(\"]\\\\n\");\r\n        }\r\n    }\r\n}\r\n`,\r\n  commentary: `\r\nВ лабораторній роботі було використано рандомізовану генерацію значень для матриці розмірність якої задає користувач.\r\nСеред таких рандомізованих значень найбільша увага приділялась найменшим елементам в кожному парному рядку та найбільшим елементам в непарних рядках, адже\r\nна них зав'язувалось основне завдання лабораторної.\r\n`,\r\n  conclusions: `\r\nБуло проведено роботу із багатовимірними масивами (матрицями), завдання вимагало алгоритмічности мислення для розв'язку поставленої задачі.  \r\n`\r\n}","import React from 'react';\nimport './styles/style.css';\nimport './styles/fonts.css';\nimport './LabWork';\nimport './functionality';\nimport LabWork from \"./LabWork\";\nimport {lw1} from \"./labworks/lw1\";\nimport {lw2} from \"./labworks/lw2\";\nimport {disactivePreviousButton} from \"./functionality\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"b-0-page\",\n      numer: \"0\",\n      theme: \"\",\n      aim: \"\",\n      task: \"\",\n      imgsrc: \"\",\n      labcode: \"\",\n      commentary: \"\",\n      conclusions: \"\"\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return !(this.state.currentPage === nextState.currentPage);\n  }\n\n  handleClick(event) {\n    disactivePreviousButton();\n    const classN = event.target.className.slice(0, \"b-n-page\".length);\n    event.target.className += \" isActive\";\n    switch (classN) {\n      case \"b-0-page\": {\n        this.setState(\n          {\n            currentPage: classN,\n            numer: \"0\",\n            theme: \"\",\n            aim: \"\",\n            task: \"\",\n            imgsrc: \"\",\n            labcode: \"\",\n            commentary: \"\",\n            conclusions: \"\"}\n        )\n        break;\n      }\n      case \"b-1-page\": {\n        this.setState({...{currentPage: classN}, ...lw1});\n        break;\n      }\n      case \"b-2-page\": {\n        this.setState({...{currentPage: classN}, ...lw2});\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"main-container\">\n        <div className=\"side-menu\">\n          <ul className=\"list\">\n            {[...Array(3).keys()].map((num) => {\n              return num === 0 ?\n                  <li><button className={`b-${num}-page able isActive`} onClick={(event) => this.handleClick(event)}>Головна</button></li>\n                : <li><button className={`b-${num}-page able`} onClick={(event) => this.handleClick(event)}>Лабораторна робота №{num}</button></li>\n            })}\n          </ul>\n        </div>\n        <div id=\"main-content\">\n\n          {this.state.currentPage === \"b-0-page\" ?\n            <div>\n              <h2>Огляд</h2>\n              <p>Мета даної сторінки полягає в хостингу фрагментів коду із лабораторних робіт з курсу \"Основи розробки\n                на платформі Java\"</p>\n              <p>Можливості HTML5, CSS, JS (зокрема і ReactJS) будуть використані для акуратнішого оформлення звітності\n                і для зручнішої презентації при захисті лабораторної роботи</p>\n              <br/>\n              <p>Важливим буде зазначити те, що це моя перша односторінкова веб-сторінка із застосуванням ReactJS, проте\n                її практично-навчальний потенціал для мене не змінюється.</p>\n              <p>(Критику з приводу організації, дизайнів та вигляду сторінки прийматиму тільки в рамках курсу\n                \"Технології програмування користувацьких інтерфейсів (Front-end)\" ))0)</p>\n            </div>\n            :\n            <LabWork numer={this.state.numer}\n                     theme={this.state.theme}\n                     aim={this.state.aim}\n                     task={this.state.task}\n                     imgsrc={this.state.imgsrc}\n                     labcode={this.state.labcode}\n                     commentary={this.state.commentary}\n                     conclusions={this.state.conclusions}>\n            </LabWork>\n          }\n        </div>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","export const disactivePreviousButton = () => {\r\n  if (document.getElementsByClassName('isActive')[0]) {\r\n    const activeButton = document.getElementsByClassName('isActive')[0];\r\n    activeButton.className = activeButton.className.slice(0, -' isActive'.length);\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport './styles/fonts.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}